version: '3'

services:  
  mysql:
    container_name: mysql
    image: mysql:latest
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql:/var/lib/mysql:delegated
      - ./Docker/mysql/init.sql:/data/application/init.sql
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: --init-file /data/application/init.sql
    restart: always
  
  tomcat:
    container_name: tomcat
    build: 
      context: .
      dockerfile: ./Docker/tomcat/Dockerfile
      args:
        - WAR_PATH=${WAR_PATH}
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_HOST}/${SPRING_DATASOURCE_TABLE}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    depends_on:
      - mysql
    ports:
      - 8080:8080
    restart: always

  reactjs:
    build: 
      context: .
      dockerfile: ./Docker/reactjs/Dockerfile
    restart: always
    command: "npm start"
    volumes:
      - ../reactjs/dashboard/front/app:/var/www/dashboard
      - ../reactjs/dashboard/front/node_modules:/var/www/dashboard/node_modules
    ports:
      - "80:3000"

  maildev:
    container_name: maildev
    image: maildev/maildev
    restart: always
    ports:
      - "1080:1080"
      - "1025:1025"

  phpmyadmin:
    container_name: pma
    image: phpmyadmin:latest
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    restart: always